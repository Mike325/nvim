name: neovimfiles

on: [push, pull_request]

jobs:
  linux-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-20.04 ]

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v2
      - name: OS Info
        run: |
          sudo apt-get install -y wget
          wget -O screenfetch-dev https://git.io/vaHfR
          chmod +x screenfetch-dev
          ./screenfetch-dev
      - name: Install system packages
        run: |
          sudo apt-get install -y curl git shellcheck python3-setuptools python-setuptools build-essential cmake python3-dev python3-pip
      - name: Fetch script
        run: |
          curl -OL https://raw.githubusercontent.com/Mike325/dotfiles/master/install.sh
          chmod +x ./install.sh
      - name: Install dotfiles and dependencies
        run: |
          ./install.sh --verbose --neovim --python=3 --portables
          sudo pip3 install --upgrade pip python-language-server
      - name: Test stable neovim
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          ./test/test.sh
      - name: Test latest Neovim
        run: |
          ./install.sh --neovim dev --force
          export PATH="$HOME/.local/bin:$PATH"
          ./test/test.sh

  osx-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macOS-latest, macos-11, macos-10.15 ]

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v2
      - name: OS Info
        run: |
          brew install git shellcheck neovim cmake wget python
          wget -O screenfetch-dev https://git.io/vaHfR
          chmod +x screenfetch-dev
          ./screenfetch-dev
      - name: Fetch script
        run: |
          curl -OL https://raw.githubusercontent.com/Mike325/dotfiles/master/install.sh
          chmod +x ./install.sh
      - name: Install dotfiles and dependencies
        run: |
          ./install.sh --verbose --neovim --python=3
          pip3 install --upgrade python-language-server
      - name: Test stable neovim
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          ./test/test.sh
      - name: Test latest Neovim
        run: |
          brew uninstall neovim && brew install neovim --HEAD
          export PATH="$HOME/.local/bin:$PATH"
          ./test/test.sh

  windows-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-latest, windows-2022, windows-2019 ]

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v2
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            C:\Python310
          key: ${{runner.os}}-pre-commit-${{hashFiles('.github/workflows/main.yml')}}
      - name: Enable Chocolatey
        shell: powershell
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: Install system packages
        shell: powershell
        run: |
          choco install -y python curl neovim cmake
      - name: Fetch script
        shell: bash
        run: |
          curl -OL https://raw.githubusercontent.com/Mike325/dotfiles/master/install.sh
          chmod +x ./install.sh
      - name: Install dotfiles and dependencies
        shell: bash
        run: |
          ./install.sh --verbose --neovim --python=3 --portables
      - name: Test stable neovim
        shell: bash
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          ./test/test.sh
      - name: Test latest Neovim
        shell: bash
        run: |
          choco uninstall neovim && choco install -y neovim --pre
          export PATH="$HOME/.local/bin:$PATH"
          ./test/test.sh
